
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "ReactNativeBlobUtilSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_fetchBlobForm(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "fetchBlobForm", "(Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_fetchBlob(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "fetchBlob", "(Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_createFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "createFile", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_createFileASCII(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "createFileASCII", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_pathForAppGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "pathForAppGroup", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_syncPathAppGroup(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, StringKind, "syncPathAppGroup", "(Ljava/lang/String;)Ljava/lang/String;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_exists(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "exists", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_writeFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "writeFile", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_writeFileArray(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "writeFileArray", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;ZLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_writeStream(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "writeStream", "(Ljava/lang/String;Ljava/lang/String;ZLcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_writeArrayChunk(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "writeArrayChunk", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_writeChunk(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "writeChunk", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_closeStream(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "closeStream", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_unlink(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "unlink", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_removeSession(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeSession", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_ls(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "ls", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_stat(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "stat", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_lstat(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "lstat", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_cp(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "cp", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_mv(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "mv", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_mkdir(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "mkdir", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_readFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "readFile", "(Ljava/lang/String;Ljava/lang/String;ZLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_hash(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "hash", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_readStream(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "readStream", "(Ljava/lang/String;Ljava/lang/String;DDLjava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_getEnvironmentDirs(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "getEnvironmentDirs", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_cancelRequest(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "cancelRequest", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_enableProgressReport(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "enableProgressReport", "(Ljava/lang/String;DD)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_enableUploadProgressReport(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "enableUploadProgressReport", "(Ljava/lang/String;DD)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_slice(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "slice", "(Ljava/lang/String;Ljava/lang/String;DDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_presentOptionsMenu(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "presentOptionsMenu", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_presentOpenInMenu(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "presentOpenInMenu", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_presentPreview(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "presentPreview", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_excludeFromBackupKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "excludeFromBackupKey", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_df(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "df", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_emitExpiredEvent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "emitExpiredEvent", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_actionViewIntent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "actionViewIntent", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_addCompleteDownload(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addCompleteDownload", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_copyToInternal(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "copyToInternal", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_copyToMediaStore(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "copyToMediaStore", "(Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_createMediaFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "createMediaFile", "(Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_getBlob(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getBlob", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_getContentIntent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getContentIntent", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_getSDCardDir(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getSDCardDir", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_getSDCardApplicationDir(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getSDCardApplicationDir", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_scanFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "scanFile", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_writeToMediaFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "writeToMediaFile", "(Ljava/lang/String;Ljava/lang/String;ZLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBlobUtilsSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count, cachedMethodId);
}

NativeBlobUtilsSpecJSI::NativeBlobUtilsSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeBlobUtilsSpecJSI_getConstants};
  methodMap_["fetchBlobForm"] = MethodMetadata {7, __hostFunction_NativeBlobUtilsSpecJSI_fetchBlobForm};
  methodMap_["fetchBlob"] = MethodMetadata {7, __hostFunction_NativeBlobUtilsSpecJSI_fetchBlob};
  methodMap_["createFile"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_createFile};
  methodMap_["createFileASCII"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_createFileASCII};
  methodMap_["pathForAppGroup"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_pathForAppGroup};
  methodMap_["syncPathAppGroup"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_syncPathAppGroup};
  methodMap_["exists"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_exists};
  methodMap_["writeFile"] = MethodMetadata {5, __hostFunction_NativeBlobUtilsSpecJSI_writeFile};
  methodMap_["writeFileArray"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_writeFileArray};
  methodMap_["writeStream"] = MethodMetadata {4, __hostFunction_NativeBlobUtilsSpecJSI_writeStream};
  methodMap_["writeArrayChunk"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_writeArrayChunk};
  methodMap_["writeChunk"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_writeChunk};
  methodMap_["closeStream"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_closeStream};
  methodMap_["unlink"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_unlink};
  methodMap_["removeSession"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_removeSession};
  methodMap_["ls"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_ls};
  methodMap_["stat"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_stat};
  methodMap_["lstat"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_lstat};
  methodMap_["cp"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_cp};
  methodMap_["mv"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_mv};
  methodMap_["mkdir"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_mkdir};
  methodMap_["readFile"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_readFile};
  methodMap_["hash"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_hash};
  methodMap_["readStream"] = MethodMetadata {5, __hostFunction_NativeBlobUtilsSpecJSI_readStream};
  methodMap_["getEnvironmentDirs"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_getEnvironmentDirs};
  methodMap_["cancelRequest"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_cancelRequest};
  methodMap_["enableProgressReport"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_enableProgressReport};
  methodMap_["enableUploadProgressReport"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_enableUploadProgressReport};
  methodMap_["slice"] = MethodMetadata {4, __hostFunction_NativeBlobUtilsSpecJSI_slice};
  methodMap_["presentOptionsMenu"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_presentOptionsMenu};
  methodMap_["presentOpenInMenu"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_presentOpenInMenu};
  methodMap_["presentPreview"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_presentPreview};
  methodMap_["excludeFromBackupKey"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_excludeFromBackupKey};
  methodMap_["df"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_df};
  methodMap_["emitExpiredEvent"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_emitExpiredEvent};
  methodMap_["actionViewIntent"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_actionViewIntent};
  methodMap_["addCompleteDownload"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_addCompleteDownload};
  methodMap_["copyToInternal"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_copyToInternal};
  methodMap_["copyToMediaStore"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_copyToMediaStore};
  methodMap_["createMediaFile"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_createMediaFile};
  methodMap_["getBlob"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_getBlob};
  methodMap_["getContentIntent"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_getContentIntent};
  methodMap_["getSDCardDir"] = MethodMetadata {0, __hostFunction_NativeBlobUtilsSpecJSI_getSDCardDir};
  methodMap_["getSDCardApplicationDir"] = MethodMetadata {0, __hostFunction_NativeBlobUtilsSpecJSI_getSDCardApplicationDir};
  methodMap_["scanFile"] = MethodMetadata {2, __hostFunction_NativeBlobUtilsSpecJSI_scanFile};
  methodMap_["writeToMediaFile"] = MethodMetadata {3, __hostFunction_NativeBlobUtilsSpecJSI_writeToMediaFile};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_addListener};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeBlobUtilsSpecJSI_removeListeners};
}

std::shared_ptr<TurboModule> ReactNativeBlobUtilSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "ReactNativeBlobUtil") {
    return std::make_shared<NativeBlobUtilsSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
